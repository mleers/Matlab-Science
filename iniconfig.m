%*************************************************************************
% FUNCTION FOR INITIALIZING THE POSITIONS AND VELOCITIES
function [RX,RY,RZ,VX,VY,VZ,FX,FY,FZ,EPOT,PRESS] = iniconfig(NATOM,DENS,kT,SIGMA,EPSILON,MASS,LJCUT)
%*************************************************************************

% PREALLOCATE ARRAYS (FOR EFFICIENCY)
RX(1:NATOM) = 0;
RY(1:NATOM) = 0;
RZ(1:NATOM) = 0;
VX(1:NATOM) = 0;
VY(1:NATOM) = 0;
VZ(1:NATOM) = 0;

% LENGTH OF SIMULATION BOX
LSIMBOX = (NATOM/DENS)^(1.0/3.0);
LSIMBOX2 = LSIMBOX/2.0;

% ASSIGN DISTANCE CUTOFF TO PREVENT OVERLAPS 
SIGMACUT2 = 0.9*SIGMA;
SIGMACUT2 = SIGMACUT2*SIGMACUT2;
          
% RESET TO 1 THE SEED FOR THE RANDOM NUMBER GENERATOR
rng(1); 

% ASSIGN POSITION OF FIRST ATOM.
POSX = random('Uniform',0,1);
POSY = random('Uniform',0,1);
POSZ = random('Uniform',0,1);
      
% TRANSFORM THIS RANDOM NUMBER BETWEEN 0 AND 1 TO A LENGTH BETWEEN 
% -1/2*SIMULATION BOX LENGTH AND +1/2*SIMULATION BOX LENGTH WITH
RX(1) = LSIMBOX*POSX - LSIMBOX2; 
RY(1) = LSIMBOX*POSY - LSIMBOX2;
RZ(1) = LSIMBOX*POSZ - LSIMBOX2;
      
% MAKE SURE TWO ATOMS DO NOT OVERLAP BY MORE THAN 10% OF SIGMA
for I = 2:NATOM	  
    fprintf('INSTERTION OF MOL %4i SUCCESSFULL \n', I)
    
	REPEAT = true;
    while (REPEAT)
        REPEAT = false;
% ASSIGN THE POSITION OF I'TH ATOM WITHIN (-L/2,+L/2)	            
        POSX = LSIMBOX*random('Uniform',0,1) - LSIMBOX2;
		POSY = LSIMBOX*random('Uniform',0,1) - LSIMBOX2;
		POSZ = LSIMBOX*random('Uniform',0,1) - LSIMBOX2;
                  
%     CALCULATE DISTANCES FROM PREVIOUSLY INSTERTED ATOMS        
        for K = 1:I-1
			DRX = POSX - RX(K);
			DRY = POSY - RY(K);
			DRZ = POSZ - RZ(K);
			DRX = DRX - LSIMBOX*round(DRX/LSIMBOX);
			DRY = DRY - LSIMBOX*round(DRY/LSIMBOX);
			DRZ = DRZ - LSIMBOX*round(DRZ/LSIMBOX);
			DELRSQ = DRX^2 + DRY^2 + DRZ^2;
            
%	TRY A DIFFERENT RANDOM POSITION FOR THE CURRENT ATOM IF IT IS 
%	TOO CLOSE TO ANY OF THE PREVIOUSLY INSERTED ATOMS
            if DELRSQ < SIGMACUT2
                REPEAT = true;
            end
        end
    end
	RX(I) = POSX; 
	RY(I) = POSY;
	RZ(I) = POSZ;
    
end

% CALCULATE FORCES
[FX,FY,FZ,EPOT,PRESS] = forces(RX,RY,RZ,NATOM,DENS,SIGMA,EPSILON,LJCUT);


% RESCALE VELOCITIES TO (-1,1) & CALCULATE SUM OF X,Y,Z VELOCITY
SUMX = 0.0;
SUMY = 0.0;
SUMZ = 0.0;
VELSQ = 0.0;
for I = 1:NATOM
	VX(I) = 2.0*random('Uniform',0,1) - 1.0;
	VY(I) = 2.0*random('Uniform',0,1) - 1.0;
	VZ(I) = 2.0*random('Uniform',0,1) - 1.0;
	SUMX = SUMX + VX(I);
	SUMY = SUMY + VY(I);
	SUMZ = SUMZ + VZ(I);
end
      
% ZERO THE TOTAL LINEAR MOMENTUM BY REMOVING/ADDING MOMENTUM
NATOMI = 1.0/NATOM;
for I = 1:NATOM
	VX(I) = VX(I) - SUMX*NATOMI;
	VY(I) = VY(I) - SUMY*NATOMI;
	VZ(I) = VZ(I) - SUMZ*NATOMI;
	VELSQ = VELSQ + MASS*(VX(I)^2+VY(I)^2+VZ(I)^2);
end
      
% SCALE VELOCITIES TO SET-POINT TEMPERATURE
FACTOR = sqrt(3.0*NATOM*kT/VELSQ);     
for I = 1:NATOM
	VX(I) = VX(I)*FACTOR;
	VY(I) = VY(I)*FACTOR;
	VZ(I) = VZ(I)*FACTOR;
end
