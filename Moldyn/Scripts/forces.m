%*************************************************************************
% FUNCTION FOR CALCULATING THE FORCE ON EACH ATOM
function [FX,FY,FZ,EPOT,PRESS] = forces(RX,RY,RZ,NATOM,DENS,SIGMA,EPSILON,LJCUT)
%*************************************************************************

% CALCULATE SIMULATION BOX LENGTH AND SQUARE OF LJCUT
LSIMBOX = (NATOM/DENS)^(1.0/3.0);
LJCUTSQ = LJCUT*LJCUT;

% SET FORCES ON ALL ATOMS, POTENTIAL ENERGY, AND PRESSURE TO ZERO	
FX(1:NATOM) = 0;
FY(1:NATOM) = 0;
FZ(1:NATOM) = 0;
EPOT = 0;
PRESS = 0;

% LOOP OVER ALL PAIRWISE INTERACTIONS TO OBTAIN POTENTIAL ENERGY,
% CONFIGURATIONAL PART OF PRESSURE, AND FORCES
for I = 1:NATOM-1
	FXI = FX(I);
	FYI = FY(I);
	FZI = FZ(I);
	RXI = RX(I);
	RYI = RY(I);
	RZI = RZ(I);
    for J = I+1:NATOM
		RXIJ = RXI-RX(J);
		RYIJ = RYI-RY(J);
		RZIJ = RZI-RZ(J);

% APPLY MINIMUM IMAGE CONVENTION
		RXIJ = RXIJ - LSIMBOX*round(RXIJ/LSIMBOX);	
		RYIJ = RYIJ - LSIMBOX*round(RYIJ/LSIMBOX);
		RZIJ = RZIJ - LSIMBOX*round(RZIJ/LSIMBOX);
		RIJSQ = RXIJ^2 + RYIJ^2 + RZIJ^2;

% IF DISTANCE IS LESS THAN LJ CUTOFF, CALCULATE FORCE ACCORDING TO
% GRADIENT OF POTENTIAL ENERGY AND THE CONFIGURATIONAL COMPONENT  
% OF PRESSURE BY SUMMING OVER RIJ*FIJ
        if (RIJSQ < LJCUTSQ)
			R6I = SIGMA^6/(RIJSQ*RIJSQ*RIJSQ);
			R12I = R6I*R6I;
			EPOT = EPOT + (-R6I + R12I);
			FIJ = -(-12.0*R12I+6.0*R6I)/RIJSQ;
			PRESS = PRESS + FIJ*RIJSQ;
			FXIJ  = RXIJ * FIJ;
			FYIJ  = RYIJ * FIJ;
			FZIJ  = RZIJ * FIJ;
			FXI   = FXI + FXIJ;
			FYI   = FYI + FYIJ;
			FZI   = FZI + FZIJ;
			FX(J) = FX(J) - FXIJ;
			FY(J) = FY(J) - FYIJ;
			FZ(J) = FZ(J) - FZIJ;	
        end
		FX(I) = FXI;
		FY(I) = FYI;
		FZ(I) = FZI;
    end
end

% MULTIPLY BACK THE MISSING 4*EPS FACTOR IN THE COMPUTED LJ ENERGY
EPOT = 4.0*EPSILON*EPOT;
	
% MULTIPLY BACK THE MISSING 4*EPS FACTOR IN THE COMPUTED RIJ*FIJ 
% AND DIVIDE BY 3*VOLUME 
PRESS = 4.0*EPSILON*DENS*PRESS/3.0/NATOM;

%   MULTIPLY BACK THE MISSING 4*EPS FACTOR IN THE COMPUTED FORCES
for I = 1:NATOM
	FX(I) = 4.0*EPSILON*FX(I);
	FY(I) = 4.0*EPSILON*FY(I);
	FZ(I) = 4.0*EPSILON*FZ(I);
end

%*************************************************************************


      

